// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id String @id @default(cuid())
  email String @unique
  name String
  password String
  wrights Wright[]
  tags Tag[]
  bites Bite[]
}

model Wright {
  id String @id
  title String @db.VarChar(200)
  head String @db.VarChar(150)
  content String @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  slug String @db.VarChar(200) @default("")
  wrighter User @relation(fields: [userId], references: [id])
  userId String
  tagWrights TagWright[]
  isPublic Boolean @default(false)
}

model Tag {
  id String @id
  name String @db.VarChar(200)
  color String @db.VarChar(10) @default("")
  createdBy User @relation(fields: [userId], references: [id])
  userId String
  tagsWrights TagWright[]
  tagBites TagBite[]
  
  @@unique([id, userId])
  @@index([userId])
}

model TagWright {
  id Int @id @default(autoincrement())
  tag Tag @relation(fields: [tagId], references: [id], onDelete: Cascade)
  tagId String
  wright Wright @relation(fields: [wrightId], references: [id], onDelete: Cascade)
  wrightId String

  @@unique([tagId, wrightId])
  @@index([tagId, wrightId])
}

enum BiteType {
  LINK
  TEXT
  IMAGE
}

model Bite {
  id String @id
  title String @db.VarChar(150)
  content String @db.Text
  createdAt DateTime 
  updatedAt DateTime @updatedAt
  type BiteType
  createdBy User @relation(fields: [userId], references: [id])
  userId String
  tagBites TagBite[]

  @@index([userId])
}

model TagBite {
  id Int @id @default(autoincrement())
  tag Tag @relation(fields: [tagId], references: [id], onDelete: Cascade)
  tagId String
  bite Bite @relation(fields: [biteId], references: [id], onDelete: Cascade)
  biteId String

  @@unique([tagId, biteId])
  @@index([tagId, biteId])
}